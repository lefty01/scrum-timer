
name: test

on: [push]


# This is the list of jobs that will be run concurrently.
# Since we use a build matrix, the actual number of jobs
# started depends on how many configurations the matrix
# will produce.
jobs:
  # This is the name of the job - can be whatever.
  test-matrix:

    # Here we tell GitHub that the jobs must be determined
    # dynamically depending on a matrix configuration.
    strategy:
      matrix:
        # The matrix will produce one job for each configuration
        # parameter of type 'arduino-platform', in this case a
        # total of 2.
        arduino-platform: ["arduino:samd", "arduino:avr"]
        # This is usually optional but we need to statically define the
        # FQBN of the boards we want to test for each platform. In the
        # future the CLI might automatically detect and download the core
        # needed to compile against a certain FQBN, at that point the
        # following 'include' section will be useless.
        include:
          # This works like this: when the platformn is "arduino:samd", the
          # variable 'fqbn' is set to "arduino:samd:nano_33_iot".
          - arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:unowifi"

    # This is the platform GitHub will use to run our workflow, we
    # pick Windows for no particular reason.
    runs-on: ubuntu-latest

    # This is the list of steps this job will run.
    steps:
      # First of all, we clone the repo using the 'checkout' action.
      - name: Checkout
        uses: actions/checkout@main

      # We use the 'arduino/setup-arduino-cli' action to install and
      # configure the Arduino CLI on the system.
      #- name: Setup Arduino CLI
      #  uses: arduino/setup-arduino-cli

      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      #- name: Install platform
      #  run: |
      #    arduino-cli core update-index
      #    arduino-cli core install ${{ matrix.arduino-platform }}
      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        uses: arduino/compile-sketches@v1
        with:
          fqbn: ${{ matrix.fqbn }}
          sketch-paths: |
            ./



# name: Setup Arduino CLI
#   uses: arduino/setup-arduino-cli@v1.0.0

#   with:
#     # Path to a single sketch
#     sketch: # optional

#     # Directory in which to search for sketches
#     sketchDirectory: # optional, default is examples

#     # Fully Qualified Board Name
#     board: # optional, default is arduino:avr:uno

#     # Directory containing Arduino libraries. Use this directory to install required 3rd-party libraries.
#     libraries: # optional, default is libraries
#     #    <NeoPixelBus.h>
#     #    <NeoPixelAnimator.h>
#     #    <ESP8266WiFi.h>
#     #    <Wire.h>
#     #    <LiquidCrystal_I2C.h>

#     # Directory containing Arduino platforms
#     hardware: # optional, default is hardware

